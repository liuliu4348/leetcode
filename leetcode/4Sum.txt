class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> ret;
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size();i++){
            //vector<int> nums(nums);
            //swap(nums[i],nums[0]);
            int targetThree=target-nums[i];
            for(int j=i+1;j<nums.size();j++){
                int targetTwo=targetThree-nums[j];
                int l=j+1;
                int r=nums.size()-1;
                while(l<r){
                    if(nums[l]+nums[r]>targetTwo){
                        r--;
                    }else if(nums[l]+nums[r]<targetTwo){
                        l++;
                    }else{
                        vector<int> quadruplets;
                        quadruplets.push_back(nums[i]);
                        quadruplets.push_back(nums[j]);
                        quadruplets.push_back(nums[l]);
                        quadruplets.push_back(nums[r]);
                        ret.push_back(quadruplets);
                        while(l<r && nums[l]==quadruplets[2]){l++;}
                        while(l<r && nums[r]==quadruplets[3]){r--;}
                    }
                    
                }
                 while(j+1<nums.size() && nums[j]==nums[j+1] ){
                    j++;
                }
            }
             while(i+1<nums.size() && nums[i]==nums[i+1] ){
                i++;
            }
        }
        return ret;
    }
};