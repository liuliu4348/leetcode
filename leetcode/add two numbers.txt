/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        bool flag=false;
        int result=l1->val+l2->val;
        if(result>=10){
            result=result%10;
            flag=true;
        }
        l1=l1->next;
        l2=l2->next;
        ListNode *head = new ListNode(result);
        ListNode *p=head;
        while(l1!=NULL && l2!=NULL){
            if(flag){
                result=l1->val+l2->val+1;
            }else{
                result=l1->val+l2->val;
            }
            if(result>=10){
                result=result%10;
                flag=true;
            }else{
                flag=false;
            }
            ListNode* l=new ListNode(result);
            p->next=l;
            p=l;
            l1=l1->next;
            l2=l2->next;
        }
        while(l1!=NULL){
            if(flag){
                result=l1->val+1;
            }else{
                result=l1->val;
            }
            if(result>=10){
                result=result%10;
                flag=true;
            }else{
                flag=false;
            }
            ListNode* l3=new ListNode(result);
            p->next=l3;
            p=l3;
            l1=l1->next;
        }
        while(l2!=NULL){
            if(flag){
                result=l2->val+1;
            }else{
                result=l2->val;
            }
            if(result>=10){
                result=result%10;
                flag=true;
            }else{
                flag=false;
            }
            ListNode* l4=new ListNode(result);
            p->next=l4;
            p=l4;
            l2=l2->next;
        }
        if(flag){
            result=1;
            ListNode* l5=new ListNode(result);
            p->next=l5;
        }
        return head;
    }
};